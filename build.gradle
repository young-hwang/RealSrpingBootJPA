buildscript {
	dependencies {
		classpath('gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10')
	}
}

plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

apply plugin: 'com.ewerk.gradle.plugins.querydsl'

group = 'io.ggammu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-devtools'

	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

	implementation 'javax.validation:validation-api:2.0.1.Final'

	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'

	implementation 'org.webjars:bootstrap:5.1.3'

	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

// QueryDsl 추가
def querydslDir = 'src/main/generated'

querydsl {
	library = 'com.querydsl:querydsl-apt'
	jpa = true
	querydslSourceDir = querydslDir
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslDir]
		}
	}
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}
